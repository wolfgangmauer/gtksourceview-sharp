// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSourceView {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[GLib.GTypeOpaque]
	public class TextRegion : GLib.Opaque {

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gtk_text_region_nth_subregion(IntPtr raw, uint subregion, ref Gtk.TextIter start, ref Gtk.TextIter end);

		public bool NthSubregion(uint subregion, Gtk.TextIter start, Gtk.TextIter end) {
			bool raw_ret = gtk_text_region_nth_subregion(Handle, subregion, ref start, ref end);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_text_region_substract(IntPtr raw, ref Gtk.TextIter _start, ref Gtk.TextIter _end);

		public void Substract(Gtk.TextIter _start, Gtk.TextIter _end) {
			gtk_text_region_substract(Handle, ref _start, ref _end);
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_text_region_add(IntPtr raw, ref Gtk.TextIter _start, ref Gtk.TextIter _end);

		public void Add(Gtk.TextIter _start, Gtk.TextIter _end) {
			gtk_text_region_add(Handle, ref _start, ref _end);
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_text_region_clear_zero_length_subregions(IntPtr raw);

		public void ClearZeroLengthSubregions() {
			gtk_text_region_clear_zero_length_subregions(Handle);
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_text_region_debug_print(IntPtr raw);

		public void DebugPrint() {
			gtk_text_region_debug_print(Handle);
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_text_region_destroy(IntPtr raw, bool delete_marks);

		public void Destroy(bool delete_marks) {
			gtk_text_region_destroy(Handle, delete_marks);
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern int gtk_text_region_subregions(IntPtr raw);

		public int Subregions() {
			int raw_ret = gtk_text_region_subregions(Handle);
			int ret = raw_ret;
			return ret;
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_region_intersect(IntPtr raw, ref Gtk.TextIter _start, ref Gtk.TextIter _end);

		public GtkSourceView.TextRegion Intersect(Gtk.TextIter _start, Gtk.TextIter _end) {
			IntPtr raw_ret = gtk_text_region_intersect(Handle, ref _start, ref _end);
			GtkSourceView.TextRegion ret = raw_ret == IntPtr.Zero ? null : (GtkSourceView.TextRegion) GLib.Opaque.GetOpaque (raw_ret, typeof (GtkSourceView.TextRegion), false);
			return ret;
		}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_region_get_buffer(IntPtr raw);

		public Gtk.TextBuffer Buffer { 
			get {
				IntPtr raw_ret = gtk_text_region_get_buffer(Handle);
				Gtk.TextBuffer ret = GLib.Object.GetObject(raw_ret) as Gtk.TextBuffer;
				return ret;
			}
		}

		public TextRegion(IntPtr raw) : base(raw) {}

		[DllImport("gtksourceview-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_text_region_new(IntPtr buffer);

		public TextRegion (Gtk.TextBuffer buffer) 
		{
			Raw = gtk_text_region_new(buffer == null ? IntPtr.Zero : buffer.Handle);
		}

#endregion
	}
}
